# -*- coding: UTF-8 -*-
"""
 This program is used to show event on the Desktop
    Copyright (C) 2025  ShengYan Cheng

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""
# unknown error, I give up this part.
# PROJECT_NAME Python_projects
# PRODUCT_NAME PyCharm
# NAME ShowDesktopTable
# AUTHOR Pfolg
# TIME 2025/3/7 19:43


from PyQt6 import uic, QtWidgets, QtCore, QtGui
from PyQt6.QtCore import Qt
from PyQt6.QtWidgets import QApplication, QMessageBox, QWidget


class Window(QtWidgets.QMainWindow):
    def __init__(self, ui_file, top=False):
        super().__init__()
        uic.loadUi(ui_file, self)
        self.isTop = False
        self.ui_width = 120
        self.ui_height = 300
        # 设置无边框（关键代码）
        self.setWindowFlags(Qt.WindowType.FramelessWindowHint)
        self.setGeometry(100, 100, 120, 300)
        self.scrollAreaWidgetContents.setGeometry(0, 0, 100, 900)
        # self.pushButton.setGeometry(QtCore.QRect(0, 30, 100, 100))
        # self.addItemInWin()

    def addItemInWin(self, data=None):
        # 获取 ScrollArea 的内容部件 Generated by AI:DeepSeek, Changed by Pfolg
        contents_widget = self.scrollAreaWidgetContents
        if contents_widget is not None:
            # 遍历所有子控件并删除
            for child in contents_widget.findChildren(QWidget):
                child.deleteLater()
        label = QtWidgets.QLabel(parent=self.scrollAreaWidgetContents)
        label.setGeometry(QtCore.QRect(0, 0, 100, 30))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        label.setFont(font)
        label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        label.setText("Today")
        if not data:
            data = []
        weekday = {1: "一", 2: "二", 3: "四", 5: "五", 6: "六", 7: "日"}
        count = 0
        if data:
            for i in data:
                des = "{}；星期{}".format(i.get("description"), weekday.get(i.get("weekday")))
                des2 = "起始：{}；结束：{}".format(i.get("time_start"), i.get("time_end"))
                btn = QtWidgets.QPushButton(parent=self.scrollAreaWidgetContents)
                btn.setFlat(True)
                btn.setText(i.get("text"))
                btn.setStyleSheet("background-color:{}".format(i.get("background_color")))
                btn.setToolTip(des)
                btn.clicked.connect(lambda: QMessageBox.information(None, i.get("text"), des + "；" + des2))
                btn.setGeometry(0, 30 + count * 100, 100, 100)
                self.scrollAreaWidgetContents.setGeometry(0, 0, 100, 140 + count * 100)
                count += count
                self.ui_height = 300
                self.ui_width = 120
        else:
            btn = QtWidgets.QPushButton(parent=self.scrollAreaWidgetContents)
            btn.setVisible(True)
            btn.setText("Rest")
            btn.setToolTip("Rest")
            btn.setStyleSheet("background-color:#ffffff")
            btn.clicked.connect(lambda: QMessageBox.information(None, "Rest", "好像没课了，休息一下吧！"))
            btn.setGeometry(0, 30 + count * 100, 100, 100)
            self.scrollAreaWidgetContents.setGeometry(0, 0, 100, 140)
            self.setGeometry(100, 100, 100, 140)
            self.ui_width = 100
            self.ui_height = 140

    def set_scrollAreaWidgetContents_length(self, l):
        self.scrollAreaWidgetContents.setGeometry(0, 0, 100, l)

    def setLocation(self, x=0, y=0):
        self.setGeometry(x, y, self.ui_width, self.ui_height)

    def closeEvent(self, event):
        event.ignore()


if __name__ == '__main__':
    pass
    """用来测试的代码"""
    # import sys
    #
    # file = "assets/uis/deskwin.ui"
    # app = QApplication(sys.argv)
    # primary_screen = app.primaryScreen()
    # screen_geometry = primary_screen.geometry()  # 包括任务栏的区域
    # # screen_geometry = primary_screen.availableGeometry()  # 可用区域（排除任务栏）
    # print(screen_geometry.width(), screen_geometry.height())
    # a = Window(file)
    # a.show()
    # sys.exit(app.exec())
